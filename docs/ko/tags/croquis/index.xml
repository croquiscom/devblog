<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Croquis on 카카오스타일 기술 블로그</title>
    <link>https://devblog.croquis.com/ko/tags/croquis/</link>
    <description>Recent content in Croquis on 카카오스타일 기술 블로그</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Tue, 11 Feb 2020 00:00:00 +0000</lastBuildDate><atom:link href="https://devblog.croquis.com/ko/tags/croquis/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>크로키의 스택 - AWS Batch</title>
      <link>https://devblog.croquis.com/ko/2020-02-11-1-croquis-stack-aws-batch/</link>
      <pubDate>Tue, 11 Feb 2020 00:00:00 +0000</pubDate>
      
      <guid>https://devblog.croquis.com/ko/2020-02-11-1-croquis-stack-aws-batch/</guid>
      <description>&lt;p&gt;서비스를 운영하다 보면 주기적으로 실행이 필요한 작업이 생깁니다.
이런 작업을 실행하는 방법은 여러 가지가 있을 수 있습니다.
다음은 크로키에서 현재 선택해서 전환 중인 AWS Batch에 관해 설명합니다.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Mobile Dev. in Croquis</title>
      <link>https://devblog.croquis.com/ko/2019-09-19-2-mobile-dev-in-croquis/</link>
      <pubDate>Thu, 19 Sep 2019 02:00:00 +0000</pubDate>
      
      <guid>https://devblog.croquis.com/ko/2019-09-19-2-mobile-dev-in-croquis/</guid>
      <description>&lt;p&gt;9월에 컨퍼런스에서 발표한 자료입니다.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>GraphQL in depth (serverside)</title>
      <link>https://devblog.croquis.com/ko/2019-09-19-1-graphql-in-depth-serverside/</link>
      <pubDate>Thu, 19 Sep 2019 01:00:00 +0000</pubDate>
      
      <guid>https://devblog.croquis.com/ko/2019-09-19-1-graphql-in-depth-serverside/</guid>
      <description>&lt;p&gt;7월에 크로키닷컴 팀원을 대상으로 발표한 자료입니다.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>크로키의 스택 - GraphQL</title>
      <link>https://devblog.croquis.com/ko/2019-05-22-1-croquis-stack-graphql/</link>
      <pubDate>Wed, 22 May 2019 00:00:00 +0000</pubDate>
      
      <guid>https://devblog.croquis.com/ko/2019-05-22-1-croquis-stack-graphql/</guid>
      <description>&lt;p&gt;현재 크로키는 API를 &lt;a href=&#34;https://graphql.org/&#34;&gt;GraphQL&lt;/a&gt;로 만들고 있습니다.
아직 많은 부분에 대해서 연구 중이어서 현재 상황만 간단하게 정리해 보겠습니다.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>크로키의 스택 - Thrift</title>
      <link>https://devblog.croquis.com/ko/2019-04-28-1-croquis-stack-thrift/</link>
      <pubDate>Sun, 28 Apr 2019 00:00:00 +0000</pubDate>
      
      <guid>https://devblog.croquis.com/ko/2019-04-28-1-croquis-stack-thrift/</guid>
      <description>&lt;p&gt;2016년 중반 마이크로서비스로의 전환을 결정했습니다.
마이크로서비스는 이론상 다른 서비스에 영향을 주지 않고 내부 기술을 바꿀 수 있습니다.
하지만 마이크로서비스 간의 통신 방법은 한번 결정하면 쉽게 바뀌기 어려울 것 같아서 가장 많이 고민했습니다.
그리고 Thrift를 선택했습니다.
이번 글에서는 그 이유와 이후의 상황에 관해 설명하겠습니다.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>분석용 이벤트 로그 점검/정리하기 2</title>
      <link>https://devblog.croquis.com/ko/2018-08-23-1-check-analytics-2/</link>
      <pubDate>Thu, 23 Aug 2018 00:00:00 +0000</pubDate>
      
      <guid>https://devblog.croquis.com/ko/2018-08-23-1-check-analytics-2/</guid>
      <description>&lt;p&gt;안녕하세요! 저는 개발팀의 오형준입니다. 앞선 글에서 데이터팀의 지형님께서 ‘분석용 이벤트 로그 점검/정리하기’라는 Task가 어떤 Task이며, 왜 중요한지에 대해 다루었다면, 이번 글에서는 이번 Task의 프로세스, 앱개발팀과 데이터팀 간의 협업 방식, 각 팀의 업무 방식 등에 대해 다루어 보려합니다!&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>분석용 이벤트 로그 점검/정리하기 1</title>
      <link>https://devblog.croquis.com/ko/2018-07-10-1-check-analytics-1/</link>
      <pubDate>Tue, 10 Jul 2018 00:00:00 +0000</pubDate>
      
      <guid>https://devblog.croquis.com/ko/2018-07-10-1-check-analytics-1/</guid>
      <description>&lt;p&gt;지그재그는 누적 다운로드 수 1,100만, MAU 200만을 넘어가고 있는 여성 쇼핑몰 모음 앱 서비스입니다. 그렇기 때문에 매일같이 지그재그에 쌓여가는 이용자들의 데이터 로그들도 어마어마하죠.&lt;/p&gt;
&lt;p&gt;이와 같은 로그들은 이용자들이 각자 자신에게 맞는 쇼핑몰/상품을 더 쉽게, 편하게 찾을 수 있도록 도와주는 개인화 알고리즘의 핵심 자원이면서, 이용자들이 앱의 각 기능들을 잘 활용하고 있는지 파악하기 위한 사용성 분석에도 필수적입니다. 또한 서비스 운영에 영향을 줄 수 있는 각종 이상 현상을 실시간으로 탐지하며 대응할 수 있게 도와주죠. 이를 위해 지그재그에서는 불필요한 로그/개인정보를 수집하지 않으면서도 앞선 목적에 부합하는 로그만 효율적으로 쌓아나가기 위해 노력하고 있습니다.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>크로키의 스택 - REST API</title>
      <link>https://devblog.croquis.com/ko/2018-05-30-1-croquis-stack-rest-api/</link>
      <pubDate>Wed, 30 May 2018 00:00:00 +0000</pubDate>
      
      <guid>https://devblog.croquis.com/ko/2018-05-30-1-croquis-stack-rest-api/</guid>
      <description>&lt;p&gt;크로키가 클라이언트-서버 아키텍처를 가진 첫 번째 서비스 개발을 시작한 것은 2012년이었습니다.
클라이언트에서 서버와 통신할 방법이 필요했는데 당시의 대세는 REST API였습니다.
저도 거기에 공감했기 때문에 REST API를 만들어 클라이언트를 구현했습니다.
그 후로 모든 서비스는 기본적으로 REST API로 클라이언트와 서버가 통신하고 있습니다.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>크로키의 스택 - 마이크로서비스</title>
      <link>https://devblog.croquis.com/ko/2017-10-15-1-croquis-stack-microservice/</link>
      <pubDate>Sun, 15 Oct 2017 00:00:00 +0000</pubDate>
      
      <guid>https://devblog.croquis.com/ko/2017-10-15-1-croquis-stack-microservice/</guid>
      <description>&lt;p&gt;지그재그 서비스는 모놀리식 아키텍처(Monolithic Architecture)에서
마이크로서비스 아키텍처(Microservice Architecture)로 전환중에 있습니다.
이번 글에서는 그 과정을 설명하려고 합니다.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>크로키의 스택 - Mithril</title>
      <link>https://devblog.croquis.com/ko/2017-04-07-1-croquis-stack-mithril/</link>
      <pubDate>Fri, 07 Apr 2017 00:00:00 +0000</pubDate>
      
      <guid>https://devblog.croquis.com/ko/2017-04-07-1-croquis-stack-mithril/</guid>
      <description>&lt;p&gt;이번 글에서는 크로키가 사용하는 스택 중
클라이언트 JavaScript 프레임워크(client-side JavaScript framework)에 대해서
소개해볼까 합니다.&lt;/p&gt;
&lt;p&gt;TD;DR) 크로키에서는 &lt;a href=&#34;http://backbonejs.org/&#34;&gt;Backbone&lt;/a&gt;, &lt;a href=&#34;http://angular.io/&#34;&gt;Angular&lt;/a&gt;를 거쳐
현재는 &lt;a href=&#34;http://mithril.js.org/&#34;&gt;Mithril&lt;/a&gt;이라는 프레임워크를 사용하고 있습니다.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>크로키가 Node.js를 선택한 이유</title>
      <link>https://devblog.croquis.com/ko/2017-02-10-1-why-croquis-selects-nodejs/</link>
      <pubDate>Fri, 10 Feb 2017 00:00:00 +0000</pubDate>
      
      <guid>https://devblog.croquis.com/ko/2017-02-10-1-why-croquis-selects-nodejs/</guid>
      <description>&lt;p&gt;현재 크로키에서는 서버용 웹 프레임워크로 &lt;a href=&#34;http://nodejs.org/&#34;&gt;Node.js&lt;/a&gt; 위에서
&lt;a href=&#34;http://expressjs.com/&#34;&gt;Express&lt;/a&gt;를 사용하고 있습니다.&lt;/p&gt;
&lt;p&gt;이번 글에서는 어떤 이유로 Node.js를 사용하게 되었는지 설명하려고 합니다.
여러분들이 웹 프레임워크를 선택하시는 데 참고가 되었으면 합니다.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>croquis.com 개발자 블로그를 시작합니다.</title>
      <link>https://devblog.croquis.com/ko/2017-01-01-1-start-devblog/</link>
      <pubDate>Sun, 01 Jan 2017 00:00:00 +0000</pubDate>
      
      <guid>https://devblog.croquis.com/ko/2017-01-01-1-start-devblog/</guid>
      <description>&lt;p&gt;안녕하세요.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://zigzag.kr/&#34;&gt;지그재그&lt;/a&gt;라는 여성 쇼핑몰 서비스를
운영하고 있는 croquis.com의 개발팀입니다.&lt;/p&gt;
&lt;p&gt;방치되어 있던 개발자 블로그를 다시 시작하려고 합니다.
기대해주세요~&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>
