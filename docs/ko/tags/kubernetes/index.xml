<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Kubernetes on 카카오스타일 기술 블로그</title>
    <link>https://devblog.kakaostyle.com/ko/tags/kubernetes/</link>
    <description>Recent content in Kubernetes on 카카오스타일 기술 블로그</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Thu, 13 Oct 2022 00:00:00 +0000</lastBuildDate><atom:link href="https://devblog.kakaostyle.com/ko/tags/kubernetes/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>EKS클러스터 Karpenter 적용기</title>
      <link>https://devblog.kakaostyle.com/ko/2022-10-13-1-karpenter-on-eks/</link>
      <pubDate>Thu, 13 Oct 2022 00:00:00 +0000</pubDate>
      
      <guid>https://devblog.kakaostyle.com/ko/2022-10-13-1-karpenter-on-eks/</guid>
      <description>안녕하세요! 카카오스타일 SRE팀 네사입니다. 오늘은 카카오스타일 SRE팀에서 올해 EKS 클러스터 이전을 하며 새롭게 도입 했던 AWS Karpenter 에 대해 공유를 해보려 합니다</description>
    </item>
    
    <item>
      <title>Terraform으로 EKS 구축하기</title>
      <link>https://devblog.kakaostyle.com/ko/2022-03-31-3-build-eks-cluster-with-terraform/</link>
      <pubDate>Thu, 31 Mar 2022 00:02:00 +0000</pubDate>
      
      <guid>https://devblog.kakaostyle.com/ko/2022-03-31-3-build-eks-cluster-with-terraform/</guid>
      <description>이전 글에서는 ECS / EKS에서 서비스 하는 것에 대한 개념을 풀어 써봤습니다. 이번 글에서는 잘 만들어진 모듈을 이용해 빠르게 구성해보겠습니다.</description>
    </item>
    
    <item>
      <title>EKS를 사용해서 어플리케이션 서비스 하기</title>
      <link>https://devblog.kakaostyle.com/ko/2022-03-31-2-web-application-using-eks/</link>
      <pubDate>Thu, 31 Mar 2022 00:01:00 +0000</pubDate>
      
      <guid>https://devblog.kakaostyle.com/ko/2022-03-31-2-web-application-using-eks/</guid>
      <description>ECS 아티클에 이어 이번 글에서는 같은 서비스를 EKS로 구축해보도록 하겠습니다. 간단하게 구축하는 것은 eksctl을 쓰면 되지만, 내부 이해를 위해 여기서는 기본부터 구현하도록 하겠습니다.</description>
    </item>
    
  </channel>
</rss>
