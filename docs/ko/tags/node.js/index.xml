<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Node.js on 카카오스타일 기술 블로그</title>
    <link>https://devblog.kakaostyle.com/ko/tags/node.js/</link>
    <description>Recent content in Node.js on 카카오스타일 기술 블로그</description>
    <generator>Hugo</generator>
    <language>ko</language>
    <lastBuildDate>Sat, 09 Apr 2022 00:00:00 +0000</lastBuildDate>
    <atom:link href="https://devblog.kakaostyle.com/ko/tags/node.js/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>ESM 삽질기</title>
      <link>https://devblog.kakaostyle.com/ko/2022-04-09-1-esm-problem/</link>
      <pubDate>Sat, 09 Apr 2022 00:00:00 +0000</pubDate>
      <guid>https://devblog.kakaostyle.com/ko/2022-04-09-1-esm-problem/</guid>
      <description>&lt;p&gt;저희는 주기적으로 Node.js 모듈을 최신 버전으로 업데이트하고 있습니다.&#xA;Node.js를 10년째 사용 중인데, CoffeeScript → TypeScript, 콜백 → Async.js → Promise(&amp;amp; async, await) 전환 하면서 몇 번 혼란의 시기가 있었습니다.&#xA;하지만 모듈 시스템은 쭉 이어져왔습니다.&#xA;그런데 최근에 이 모듈 시스템에 큰 변화가 생겼고 기존 변화와 다르게 양립이 잘 안 되서 모듈 업데이트를 제대로 못 하고 있습니다.&#xA;이 문제를 일으킨 ESM이 뭐고 어떤 작업이 필요한지 알아보려고 합니다. (개인적으로 만족하는 깔끔한 해결책이 나오지 못했습니다)&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
