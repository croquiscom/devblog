<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Storybook on 카카오스타일 기술 블로그</title>
    <link>https://devblog.kakaostyle.com/ko/tags/storybook/</link>
    <description>Recent content in Storybook on 카카오스타일 기술 블로그</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Mon, 17 Jul 2023 01:00:00 +0000</lastBuildDate><atom:link href="https://devblog.kakaostyle.com/ko/tags/storybook/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Storybook의 MSW mock 구조 개선</title>
      <link>https://devblog.kakaostyle.com/ko/2023-07-17-1-msk-mock-in-storybook/</link>
      <pubDate>Mon, 17 Jul 2023 01:00:00 +0000</pubDate>
      
      <guid>https://devblog.kakaostyle.com/ko/2023-07-17-1-msk-mock-in-storybook/</guid>
      <description>&lt;p&gt;카카오스타일의 파트너센터 서비스에서는 UI 테스트와 문서화를 위해서 Storybook과 MSW를 사용하고 있습니다. Storybook의 각 스토리마다 MSW GraphQL mock을 개별로 정의해서 사용하고 있었는데, 이로 인해 코드가 중복되고 mock 누락으로 인한 오류가 자주 발생했습니다. 이런 문제를 해결하기 위해, 스토리마다 따로 정의된 MSW mock을 한 군데로 모아서 관리할 수 있는 새로운 구조를 제안하고, recast를 사용한 변환 스크립트를 작성하여 마이그레이션 하는 과정까지 다뤄봤습니다.&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>
